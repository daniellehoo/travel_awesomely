import React, { Component } from 'react';
import Nav from '../partials/Nav';
import Footer from '../partials/Footer';
import CommentForm from './Commentform';
import Comment from './Comment';
import CommentList from './CommentList';

class City extends Component {
  constructor(props){
    super(props);
    this.state = {
      cityData: '',
      cityDataReceived: false,
      city: '',
      id: '',
      name: '',
      snippet: [],
      comments: [],
      comment_id: 0,
    }

    this.delComment = this.delComment.bind(this);
    this.getComments = this.getComments.bind(this)

  }

componentDidMount(){
  console.log('this.props.match.params.id', this.props.match.params.id)
  fetch(`/cities/${this.props.match.params.id}`)
  .then((res) => res.json())
  .then((data) => {
    console.log('data from city componentWillMount', data)
    console.log('danielle wants this', data.results[0].snippet)
    this.setState({
      cityData: data,
      cityDataReceived: true,
      city: data.city_name,
      id: data.id,
      name: data.results[0].name,
      snippet: data.results[0].snippet,
      comments: data.comments,
      comment_id: data.comments.city_id
    })
  })
  .catch((err) =>
    console.log(err))
}

getComments(){
    console.log('I am resetting state in getComments and rendering them')
}

delComment(e){
    console.log('I am deleting from:', this.state.id)
    fetch(`/comments/${this.state.id}`, {
            method: 'DELETE'
      })
      .then(() => {this.getComments()})
        e.preventDefault();
       }

// this handleChange is also in commentForm, should it all be in city page when we are done?
handleChange(e) {
    this.setState({comment: e.target.value,
        city_id: this.state.id});
      }

  handleClick() {
    console.log('this is props', this.props)
  }

  render(){
    console.log('statecity', this.props.city)
    console.log('statesnippet', this.props.snippet)
      return(
          <div className="city">
            <Nav />
            <h1>{this.state.name}</h1>
            <h2>{this.state.snippet}</h2>
            <Comment handleClick={this.delComment}
                     comment={this.state.comments}
                     handleChange={this.handleChange}/>
            <CommentForm />
            <Footer />
          </div>
      )
  }
}


export default City;


import React, { Component } from 'react';

class Comment extends Component {
  constructor(props){
    super(props);
    this.state = {
      id: '',
      cityData: '',
      snippet: [],
      comment: this.props.comment,
    }
    this.delComment = this.delComment.bind(this);
    this.edit = this.edit.bind(this);
    this.handleChange = this.handleChange.bind(this);
  }

delComment(e){
  console.log('delcomment', this.props.commentId)
  fetch(`/comments/${this.props.commentId}`, {
    method: 'DELETE'
  })
  .then(() => {this.props.getComments})
  // e.preventDefault();
}

edit(e){
  // e.persist();
  e.preventDefault();
  console.log('edit is firing')
  console.log('this.state', this.state)
  console.log('this.props.commentId', this.props.commentId)
  fetch(`/comments/${this.props.commentId}`, {
    method: 'PUT',
    headers: {'Content-Type': 'application/json'},
     body: JSON.stringify({
       'id': this.props.commentId,
       'comment': this.props.comment,
       'city_id': this.props.cityId,
     })
   })
  .then(() => this.setState({
    value: e
  }))
  .then(() => {this.props.getComments}
)}

  handleChange(e) {
    console.log('hitting handleChange')
    this.setState({
      'id': this.props.commentId,
      'comment': e.target.value,
      'city_id': this.props.cityId,
    })
  }

  render(){
    return(
        <div>
            <span>
              {/* <button onClick={() => this.edit(this.props.commentId)}>Edit</button> */}
              <br />
              <button onClick={() => this.delComment(this.props.commentId)}>Delete</button>
              <br />
            </span>

            <form onSubmit={(e) => this.edit(e)}>
              <input type="text" value = {this.props.comment} placeholder={this.props.comment} onChange={(e) => this.handleChange(e)} />
              <br/>
              <input type="submit" value="update" />
            </form>
        </div>
    )
}
}

export default Comment;
